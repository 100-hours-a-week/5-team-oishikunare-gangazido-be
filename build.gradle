plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.ec4j.editorconfig' version '0.1.0'
    id 'pl.allegro.tech.build.axion-release' version '1.18.18'
}

scmVersion {
    tag {
        prefix = 'v'    // 태그 접두사 설정 (예: v1.0.3)
    }

    repository {
        pushTagsOnly = true
    }

    ignoreUncommittedChanges = true

    versionIncrementer 'incrementPatch'

    checks {
        aheadOfRemote = false
        uncommittedChanges = false
        snapshotDependencies = false
    }

    tasks.register('printVersion') {
        doLast {
            println project.scmVersion.version  // 정확한 버전 출력
        }
    }

    hooks {
        pre 'commit', { context ->
            def version = context.currentVersion
            println("🔍 Setting release commit message: chore(release): release version ${version}")
            "git commit --amend -m 'chore(release): ${version}'".execute()
        }
        pre 'push'
    }
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

editorconfig {
    excludes = [
            'build',
            '.github',
            '.gradle',
            '.husky',
            'gradle',
            'node_modules',
            'config'
    ]
}

check.dependsOn editorconfigCheck

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.26'//여니
    implementation 'org.json:json:20210307'//여니 추가
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'com.h2database:h2'
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0")
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.2'
    // lombok 관련 의존성 추가
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Spring Security 관련 지원
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Spring Security 관련 테스트 지원
    testImplementation 'org.springframework.security:spring-security-test'
    // Argon2 관련 bouncycastle 라이브러리 의존성 추가
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
}

tasks.named('test') {
    useJUnitPlatform()
}

